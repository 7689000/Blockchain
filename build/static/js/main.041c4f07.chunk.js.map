{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["cleune","cledeux","lien","App","useState","currentAccount","setCurrentAccount","checkWalletIsConnected","a","window","ethereum","console","log","request","method","accounts","length","account","connectWalletHandler","alert","cleenvoyeur","useRef","clereceveur","lelien","mintNftHandler","provider","ethers","providers","Web3Provider","signer","getSigner","nftContract","Contract","abi","safeMint","nftTxn","wait","useEffect","className","class","id","type","placeholder","onClick","name","document","getElementById","value","message","innerHTML","range","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","action","target","ref","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.041c4f07.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport {useRef} from 'react';\nimport './App.css';\n\nimport abi from './contracts/ABI.json';\nimport { ethers } from 'ethers';\n\nconst contractAddress = \"0xF786878156D6d0964CA078D8EB3D7fC89D25d6C2\";\nvar cleune;\nvar cledeux;\nvar lien;\n\n\nfunction App() {\n\n\n \n\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have Metamask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\")\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account: \", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  }\n\n  const connectWalletHandler = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      alert(\"Please install Metamask!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n      console.log(\"Found an account! Address: \", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n function resultats(){ \n\n    var name = document.getElementById(\"fname\").value;\n    var message = document.getElementById(\"fmessage\").value;\n    var lien = document.getElementById(\"fimg\").value;\n\n    document.getElementById(\"modnom\").innerHTML=name;\n    document.getElementById(\"modmess\").innerHTML=message;\n    document.getElementById(\"modurl\").innerHTML=lien;\n}\n\n\n  function copiercoller(){\n    \n      var range = document.createRange();\n      range.selectNode(document.getElementById(\"jsontext\"));\n      window.getSelection().removeAllRanges(); // clear current selection\n      window.getSelection().addRange(range); // to select text\n      document.execCommand(\"copy\");\n      window.getSelection().removeAllRanges();// to deselect\n  \n  }\n\n  const cleenvoyeur = useRef(null);\n  const clereceveur = useRef(null);\n  const lelien = useRef(null);\n\n  function handleClick() {\n    cleune = cleenvoyeur.current.value;\n    cledeux = clereceveur.current.value;\n    lien = lelien.current.value;\n\n    console.log(cleune);\n    console.log(cledeux);\n    console.log(lien);\n  }\n\n  const mintNftHandler = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const nftContract = new ethers.Contract(contractAddress, abi, signer);\n\n        console.log(\"Initialize payment\");\n        let nftTxn = await nftContract.safeMint(cleune,cledeux,lien);\n\n        console.log(\"Mining... please wait\");\n        await nftTxn.wait();\n\n        console.log(\"Mined, see transaction: https://goerli.etherscan.io/tx/${nftTxn.hash}\");\n\n      } else {\n        console.log(\"Ethereum object does not exist\");\n      }\n\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const connectWalletButton = () => {\n    return (\n      <button onClick={connectWalletHandler} className='cta-button connect-wallet-button'>\n        Connect Wallet\n      </button>\n    )\n  }\n\n  const mintNftButton = () => {\n    return (\n      <button onClick={mintNftHandler} className='cta-button mint-nft-button'>\n        Mint NFT\n      </button>\n    )\n  }\n\n\n\n    useEffect(() => {\n      checkWalletIsConnected();\n    }, [])\n  \n\n\n  \n\n  return (\n    <div className='main-app'>\n      <div class=\"snowflakes\" aria-hidden=\"flase\">  \n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n        <div class=\"snowflake\">\n        ❅ \n        </div>\n      </div>\n\n      <div id=\"header\">  \n    <h1>HO HO HO</h1>\n    <h2>C'est la fin de l'année... Les fêtes approchent et le Bitcoin est au plus bas. Vous n'avez plus aucun Ethere dans vos poches...</h2>\n    <h2>Offrez des <b>NFT</b> pour NOEL! C'est a la mode et tout le monde pense que ca coute super cher</h2>\n</div>\n\n\n<div id=\"megaform\" >  \n\n<div id=\"form1\" >  \n    <h3>Etape 1 : Créez le NFT!</h3>\n\n    <p>Donnez un nom à votre cadeau!</p> \n    <input type=\"text\" id=\"fname\" placeholder=\"Nom du cadeau\"></input>\n\n    <p>Quelle message voulez vous lui dire?</p>\n    <input type=\"text\" id=\"fmessage\" placeholder=\"Message\"></input>\n\n    <p>Entrez l'URL de l'image que vous voulez offrire!</p>\n    <input type=\"text\" id=\"fimg\" placeholder=\"Lien Image\"></input>\n\n    <br></br>\n    <button type=\"button\" id=\"mybutton\" onClick={resultats}>Etape suivante!</button>\n    <br></br>\n</div>\n\n\n<div id=\"form2\"> \n<h3>Etape 2 : Emballez le NFT!</h3>\n\n\n\n<div id=\"jsontext\">\n    <h4>{\"{\"}</h4>\n    <h4>  \"title\": \"Asset Metadata\",</h4>   \n    <h4>  \"type\": \"object\"  ,</h4> \n        <h4>  \"properties\": {\"{\"}</h4>\n        <h4>    \"name\": {\"{\"}</h4>\n            <h4>     \"type\": \"string\",</h4>          \n            <h4>      \"description\": \"<a id=\"modnom\">Nom</a>\"</h4>\n        <h4>{   \"}\"},</h4>    \n        <h4>    \"description\":{\"{\"}</h4>       \n                <h4>      \"type\": \"string\",</h4>          \n                <h4>      \"description\": \"<a id=\"modmess\">Message</a>\"</h4>          \n        <h4>{   \"}\"},</h4>\n        <h4>    \"image\": {\"{\"}</h4>\n                    <h4>      \"type\": \"string\",</h4>         \n                    <h4>      \"description\": \"<a id=\"modurl\">URL</a>\"</h4>     \n            <h4>{   \"}\"}</h4>\n            <h4>{ \"}\"}</h4>\n            <h4>{\"}\"}</h4>\n                  \n</div>     \n                  \n\n    <button type=\"button\" id=\"mybutton\" onClick={copiercoller}>Copier le texte</button> \n\n   \n    <p>Après avoir copié le texte, le coller sur la page JSON KEPPER et récuperer le lien</p>\n   \n    <form action=\"https://www.jsonkeeper.com\" method=\"get\" target=\"_blank\">  \n        <button type=\"submit\">Aller sur Json keeper</button>\n     </form>\n    <br></br>\n\n    </div >\n\n  \n    \n\n    <div id=\"form3\">\n\n    <h3>Etape 3 : Offrez le NFT!</h3>\n\n        <p>Quelle est le lien que vous avez obtenu?</p>\n        <input ref={lelien} type=\"text\" id=\"unlien\" name=\"message\" placeholder='Lien JSON KEEPER'/>\n\n\n        <p>Quelle est votre clée?</p>\n        <input ref={cleenvoyeur} type=\"text\" id=\"cleenv\" name=\"message\" placeholder='Votre clée'/>\n\n        <p>Quelle est la clé du destinataire?</p>\n        <input ref={clereceveur} type=\"text\" id=\"clere\" name=\"message\" placeholder='Clée destinataire'/>\n\n        \n        <br/>\n        <button onClick={handleClick}>Envoyez les INFOS</button>\n\n\n        <h3>Enfin, cliquez sur le gros bouton!</h3>\n\n  \n      <div>\n        {currentAccount ? mintNftButton() : connectWalletButton()}\n      </div>\n    </div>\n    </div>\n\n    \n\n \n\n\n\n      \n</div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}